@model TPC.Core.Models.ViewModels.ItemDetailedViewModel
@using TPC.Core.Models;
@using TPC.Core.Models.ViewModels;
@using System.Configuration;
@using TPC.Web.Infrastructure;
@{
    string stremptypoint = "-";
}
<script>
    //Google Analytics
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
            (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date(); a = s.createElement(o),
        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-22899788-1', 'penworthy.com');
    ga('send', 'pageview');

</script>
<script type="text/javascript">

    $(document).ready(function () {

        //Javascript for updating the DW and Cart Count in content Page
        $('#SCItemCount sup').html('@Model.UserVM.SCCount');

        var itemNo = String(@Model.ItemID);
        var quoteid = String(@Model.QuoteID);
        var querystring = location.search.replace('?', '').split('&');

        for (var i = 0; i < querystring.length; i++) {
            // get name and value
            var name = querystring[0].split('=')[0];
            var value = querystring[0].split('=')[1];
            // populate object
            var QuoteID = value;
        }

        $('.AddCartSID').one('click', function (e) {
            $(this).off(e);
            var itemIdsList = [];
            itemIdsList.push(this.id);
            var AllCount;
            var noCount
                , yesCount
                , maybeCount
                , newCount;
            var type = $('#hdnPageType').val();
            $.ajax({
                url: "@Url.Content("~/ItemListView/UpdateStatusofAllItems")",
                type: "POST",
                data: { selectbtnid: this.name, itemID: itemIdsList.toString(), quoteID: String(@Model.QuoteID), type: type },
                datatype: 'html',
                success: function (data) {
                    var model = data;
                    AllCount = model.SelectionCount;
                    noCount = model.noOfNoCount;
                    yesCount = model.noOfYesCount;
                    maybeCount = model.noOfMaybeCount;
                    newCount = model.noOfNewCount;
                    $('a[id=' + itemIdsList.toString() + '][value=2]').children('img').attr('src', '../Images/YesNoMaybe/NoNew.jpg').attr('data-value', 'Null');
                    $('a[id=' + itemIdsList.toString() + '][value=3]').children('img').attr('src', '../Images/YesNoMaybe/MayBeNew.jpg').attr('data-value', 'Null');
                    $('a[id=' + itemIdsList.toString() + '][value=1]').children('img').attr('src', '../Images/YesNoMaybe/Yes.jpg').attr('data-value', 'Yes');;
                    $('div:[id="' + itemIdsList.toString() + '"]').children('div').children('div').find('div:[id="carttext-' + itemIdsList.toString() + '"]').removeClass('hide').show();
                    $('div:[id="' + itemIdsList.toString() + '"]').children('div').children('div').find('div:[id="carttextlink-' + itemIdsList.toString() + '"]').hide();
                    $('div:[id="carttext-' + itemIdsList.toString() + '"]').removeClass('hide').show();
                    $('div:[id="carttextlink-' + itemIdsList.toString() + '"]').hide();
                    $('.lableValTD').each(function () {
                        if (this.id == "0") $(this).html('(' + AllCount + ')');
                        if (this.id == "1") $(this).html('(' + yesCount + ')');
                        if (this.id == "2") $(this).html('(' + noCount + ')');
                        if (this.id == "3") $(this).html('(' + maybeCount + ')');
                        if (this.id == "5") $(this).html('(' + newCount + ')');
                    });

                    $('#SCItemCount sup').html(model.SCItemsCount);
                    $('#DWItemCount sup').html(AllCount);

                    var calcpercentage = ((parseInt(yesCount))/(parseInt(AllCount))) * 100;
                    var pb1 = $('#pb1').progressbar();
                    pb1.progressbar('value', parseInt(calcpercentage));
                }


            });
            $.magnificPopup.close();
        });

        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',
            fixedContentPos: false,
            fixedBgPos: true,
            overflowY: 'auto',
            closeBtnInside: true,
            preloader: false,
            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in',
        });
    });
</script>
<div id="onScreen-dialog" class="zoom-anim-dialog mfp-hide" style="width:960px;height:640px">
    <button title="Close (Esc)" type="button" class="mfp-close">X</button>
    <div id="loadingSetView">
    </div>
</div>
<div id="SingleItem">
  @*  <div class="place-left span12 div-MainHeight15">
    </div>*@
    <div class="span12 contentNormalText place-left">
        <div id="ViewNextItem" class="span12 place-left ">
            <div id="divImg" class="place-left text-left margin-left1">
                @*<img  src="@Url.Content(ConfigurationManager.AppSettings["ImagesW150"] + @Model.ISBN + ".jpg")" class="shadow" style="width:150px"   />*@
                <img  class="shadow" src="~/Image/Getimage?id=@String.Format("{1}{2}{0}{3}", @Model.ISBN, ConfigurationManager.AppSettings["ImagesW150"] ,"\\",".jpg")">
                 <div class="span2 text-center">
                                        <input type="button" id="@Model.ISBN" class="OpenBook text-center " value="Look Inside" style="background-color:transparent" />
                                    </div>
            </div>
            
            <div id="divitemDetails" class="place-left span8 text-left margin-left3 ">
                <div class="segoe">
                    <h2><strong>@Model.Title</strong></h2>
                </div>
                <div><strong>@Model.Author</strong></div>
                <div>
                    <strong>
                        @Html.ConvertEnumToBindType(Model.Type)</strong>
                </div>
                <div>@Model.Description</div>
                <div class="div-MainHeight35"><strong>@string.Format("{0:C}", Model.Price)</strong></div>
                <div class="place-left">
                    <div class="place-left span4">@Html.Label(Resources.TCPResources.SetPageSeries, new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left"><strong>@{string series = Model.Series == string.Empty ? stremptypoint : Model.Series;}@series</strong></label></div>
                    <div class="place-left span4">@Html.Label(Resources.TCPResources.SetPageARLevel, new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left"><strong id="ar">@Model.ARLevel</strong></label></div>
                    <div class="place-left span4">@Html.Label(Resources.TCPResources.SetPageCharacter, new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left"><strong>@{string primaryChracter = Model.Primarycharacter == string.Empty ? stremptypoint : Model.Primarycharacter;}@primaryChracter</strong></label></div>
                    <div class="place-left span4">@Html.Label(Resources.TCPResources.SetPageRCLevel, new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left"><strong>@Model.RCLevel</strong></label></div>
                    <div class="place-left span4">@Html.Label(Resources.TCPResources.SetPageInterestGrade, new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left"><strong>@{string interestGrade = Model.InterestGrade == string.Empty ? stremptypoint : Model.InterestGrade;}@interestGrade</strong></label></div>
                    <div class="place-left span4">@Html.Label(Resources.TCPResources.SetPageLexile, new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left"><strong id="lexile">@{string lexile = Model.Lexile == string.Empty ? stremptypoint : Model.Lexile;}@lexile</strong></label></div>
                    <div class="place-left span4">@Html.Label(Resources.TCPResources.SetPageCopyRight, new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left"><strong>@Model.CopyRight</strong></label></div>
                    <div class="place-left span4">@Html.LabelFor(e => e.Dewey, new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left"><strong>@{string dewey = Model.Dewey == string.Empty ? stremptypoint : Model.Dewey;}@dewey</strong></label></div>
                    <div class="place-left span4">@Html.LabelFor(e => e.Size, new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left"><strong>@{string size = Model.Size == string.Empty ? stremptypoint : Model.Size;}@size</strong></label></div>
                    <div class="place-left span4">@Html.LabelFor(e => e.ISBN, new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left">@Model.ISBN</label></div>
                    <div class="place-left span4">@Html.LabelFor(e => e.Pages, new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left"><strong>@Model.Pages</strong></label></div>
                   @* <div class="place-left span3_5">@Html.LabelFor(e => e.ReviewSource, new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left"><strong>@{string reviewSource = Model.ReviewSource == string.Empty ? stremptypoint : Model.ReviewSource;}@reviewSource</strong></label></div>*@
                    <div class="place-left span4">@Html.Label("Item #", new { @class = "place-left" })<label class="place-left">:</label><label class="margin-left1 place-left">@Model.ItemID</label></div>
                </div>
            </div>
            <div id="divDWoptional" class="place-left span1 hide">
                <div class="place-left" style="width: 100px;">
                        @if (@Model.IsInSCDWQuote == true)
                        {
                        <button class="border buttonsWidth" disabled="disabled">In Cart</button>
                        }
                        else
                        {
                        <button class="buttonBackgroundColor AddCartSID bgcolor" name="1" data-itemid="@Model.ItemID" id="@Model.ItemID" style="color:white">@Html.Label("Add To Cart")</button>
                        }
                </div>
            </div>
        </div>
    </div>
</div>
